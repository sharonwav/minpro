// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())  
  email     String   @unique
  password  String 
  referralCode String
  isVerified Boolean @default(false)
  totalPoint Int 


  referralPoint RefferalPoint[]
  referralDiscount RefferalDiscount[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Creator {
  id String @id @default(uuid())
  email String @unique
  password String

  banner String?
  logo String?
  url String?
  name String?
  phoneNumber Int?
  address String?
  aboutUs String?
  twitter String?
  instagram String?
  facebook String?

  event Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model LegalInfo {
  id Int @id @default(autoincrement())
  idCardFile String?
  idCard String?
  name String?
  address String?
}


model Event{
  id Int @id @default(autoincrement())
  name String
  price Int

  startDate DateTime @db.Date
  endDate DateTime @db.Date

  startTime DateTime @db.Time
  endTime DateTime @db.Time
  
  location String
  address String?
  url String? 
  description String
  termsAndCondition String
  capacity Int
  isPaid Boolean

  creatorId String
  creator Creator @relation(fields: [creatorId], references: [id])
}

model EventTicket {
  id Int @id @default(autoincrement())
  name String

}

model RefferalPoint {
  id Int @id @default(autoincrement())
  point Int 
  expiry DateTime
  userId String
  user User @relation(fields: [userId], references: [id])
}

model RefferalDiscount {
  id Int @id @default(autoincrement())
  discount Int
  expiry DateTime
  isUsed Boolean
  userId String
  user User @relation(fields: [userId], references: [id])
}

enum EventType {
  online
  offline
}

model Category{
  id Int @id @default(autoincrement())
  name String
}





